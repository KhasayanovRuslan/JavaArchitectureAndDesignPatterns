Архитектура домашнего ERP-приложения.

Предположим, что у нас на дому есть несколько пользователей, которые создали некий домашний бизнес.
Разделим решение на три уровня так, чтобы:
1. Презентационный уровень запускался на компьютере каждого пользователя.
2. Уровень приложений отвечал за выполнение бизнес-процессов, доступ к базам данных осуществлялся только при необходимости.
3. Уровень баз данных сохранял данные о всех бизнес-действиях (транзакциях).
Презентационный уровень здесь выполнял роль клиента, а уровень приложений — сервера, схожим образом уровень приложений выполнял роль клиента, а уровень баз данных выполнял роль сервера.
Таким образом, нам понадобится трехуровневая клиент-серверная архитектура, позволяющая запускать каждый из уровней на отдельных машинах.
Мы выбираем клиент-серверную архитектуру по вышеперечисленным причинам, а также потому, что такая архитектура обладает рядом преимуществ, которые нам необходимы:
1. Высокая безопасность. Все данные хранятся на сервере, который полностью контролирует доступ к ним (в теории).
2. Более простое администрирование вследствие централизованной авторизации пользователей сервером.
3. Простота обслуживания. Роли и ответственность вычислительной системы распределены между несколькими серверами, общающимися друг с другом по сети. Благодаря этому клиент гарантированно остается неосведомленным и не подверженным влиянию событий, происходящих с сервером (ремонт, обновление либо перемещение).

